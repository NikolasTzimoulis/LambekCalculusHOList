theorems { 
	fingerprint: 3861542298922911510   
	conclusion: "(a (c (fun (fun (recspace (num)) (bool)) (bool)) ?) (l (v (recspace (num)) a) (a (c (fun (fun (fun (recspace (num)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (num)) (bool)) hypermap') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (recspace (num)) (bool)) (bool)) !) (l (v (recspace (num)) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (num) (bool)) (bool)) ?) (l (v (num) a) (a (a (c (fun (recspace (num)) (fun (recspace (num)) (bool))) =) (v (recspace (num)) a)) (a (l (v (num) a) (a (a (a (c (fun (num) (fun (num) (fun (fun (num) (recspace (num))) (recspace (num))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (num) a)) (l (v (num) n) (c (recspace (num)) BOTTOM)))) (v (num) a)))))) (a (v (fun (recspace (num)) (bool)) hypermap') (v (recspace (num)) a)))))) (a (v (fun (recspace (num)) (bool)) hypermap') (v (recspace (num)) a)))))))" 
	tag: THEOREM 
	training_split: TRAINING
    library_tag: "c-DL.ml"
	pretty_printed: "|- ?a. !string'. (!a. (?a. a = (\\a. CONSTR 0 a (\\n. BOTTOM)) a) ==> string' a)\n                 ==> string' a"
	proof_function: "type_definition_helper"
}
theorems {
	pretty_printed: "|- (!a. _mk_string (_dest_string a) = a) /\\\n   (!r. (!string'. (!a. (?a. a = (\\a. CONSTR 0 a (\\n. BOTTOM)) a)\n                        ==> string' a)\n                   ==> string' r) <=>\n        _dest_string (_mk_string r) = r)"
	fingerprint: 2744787453934345244
	conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (hypermap) (bool)) (bool)) !) (l (v (hypermap) a) (a (a (c (fun (hypermap) (fun (hypermap) (bool))) =) (a (c (fun (recspace (num)) (hypermap)) hypermap) (a (c (fun (hypermap) (recspace (num))) tuple_hypermap) (v (hypermap) a)))) (v (hypermap) a))))) (a (c (fun (fun (recspace (num)) (bool)) (bool)) !) (l (v (recspace (num)) r) (a (a (c (fun (bool) (fun (bool) (bool))) =) (a (c (fun (fun (fun (recspace (num)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (num)) (bool)) hypermap') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (recspace (num)) (bool)) (bool)) !) (l (v (recspace (num)) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (num) (bool)) (bool)) ?) (l (v (num) a) (a (a (c (fun (recspace (num)) (fun (recspace (num)) (bool))) =) (v (recspace (num)) a)) (a (l (v (num) a) (a (a (a (c (fun (num) (fun (num) (fun (fun (num) (recspace (num))) (recspace (num))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (num) a)) (l (v (num) n) (c (recspace (num)) BOTTOM)))) (v (num) a)))))) (a (v (fun (recspace (num)) (bool)) hypermap') (v (recspace (num)) a)))))) (a (v (fun (recspace (num)) (bool)) hypermap') (v (recspace (num)) r)))))) (a (a (c (fun (recspace (num)) (fun (recspace (num)) (bool))) =) (a (c (fun (hypermap) (recspace (num))) tuple_hypermap) (a (c (fun (recspace (num)) (hypermap)) hypermap) (v (recspace (num)) r)))) (v (recspace (num)) r))))))"
	tag: TYPE_DEFINITION
	type_definition {
		type_name: "hypermap"
		abs_name: "hypermap"
		rep_name: "tuple_hypermap"
		theorem_arg: 3861542298922911510 
	}
	library_tag: "c-DL.ml"
}

theorems { 
	fingerprint: 1638867084221279635   
	conclusion: "(a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a) (a (c (fun (fun (fun (recspace (list (char))) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (list (char))) (bool)) loop') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) !) (l (v (recspace (list (char))) a') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (list (char)) (bool)) (bool)) ?) (l (v (list (char)) a) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (l (v (list (char)) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (list (char)) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM)))) (v (list (char)) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a0) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (v (recspace (list (char))) a0)) (v (recspace (list (char))) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a0))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a0) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (v (recspace (list (char))) a0)) (v (recspace (list (char))) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a0))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a0) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (v (recspace (list (char))) a0)) (v (recspace (list (char))) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a0))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (l (v (recspace (list (char))) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))) (v (recspace (list (char))) a)))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a)))))) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (l (v (recspace (list (char))) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))) (v (recspace (list (char))) a)))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a))))))))))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a')))))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a)))))))" 
	tag: THEOREM 
	training_split: TRAINING
    library_tag: "c-DL.ml"
	pretty_printed: "|- ?a. !form'. (!a'. (?a. a' = (\\a. CONSTR 0 a (\\n. BOTTOM)) a) \\/\n                     (?a0 a1.\n                          a' =\n                          (\\a0 a1.\n                               CONSTR (SUC 0) (@v. T)\n                               (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                          a0\n                          a1 /\\\n                          form' a0 /\\\n                          form' a1) \\/\n                     (?a0 a1.\n                          a' =\n                          (\\a0 a1.\n                               CONSTR (SUC (SUC 0)) (@v. T)\n                               (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                          a0\n                          a1 /\\\n                          form' a0 /\\\n                          form' a1) \\/\n                     (?a0 a1.\n                          a' =\n                          (\\a0 a1.\n                               CONSTR (SUC (SUC (SUC 0))) (@v. T)\n                               (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                          a0\n                          a1 /\\\n                          form' a0 /\\\n                          form' a1) \\/\n                     (?a. a' =\n                          (\\a. CONSTR (SUC (SUC (SUC (SUC 0)))) (@v. T)\n                               (FCONS a (\\n. BOTTOM)))\n                          a /\\\n                          form' a) \\/\n                     (?a. a' =\n                          (\\a. CONSTR (SUC (SUC (SUC (SUC (SUC 0))))) (@v. T)\n                               (FCONS a (\\n. BOTTOM)))\n                          a /\\\n                          form' a)\n                     ==> form' a')\n               ==> form' a" 
	proof_function: "type_definition_helper"
}
theorems {
	 pretty_printed: "|- (!a. _mk_form (_dest_form a) = a) /\\\n   (!r. (!form'. (!a'. (?a. a' = (\\a. CONSTR 0 a (\\n. BOTTOM)) a) \\/\n                       (?a0 a1.\n                            a' =\n                            (\\a0 a1.\n                                 CONSTR (SUC 0) (@v. T)\n                                 (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                            a0\n                            a1 /\\\n                            form' a0 /\\\n                            form' a1) \\/\n                       (?a0 a1.\n                            a' =\n                            (\\a0 a1.\n                                 CONSTR (SUC (SUC 0)) (@v. T)\n                                 (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                            a0\n                            a1 /\\\n                            form' a0 /\\\n                            form' a1) \\/\n                       (?a0 a1.\n                            a' =\n                            (\\a0 a1.\n                                 CONSTR (SUC (SUC (SUC 0))) (@v. T)\n                                 (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                            a0\n                            a1 /\\\n                            form' a0 /\\\n                            form' a1) \\/\n                       (?a. a' =\n                            (\\a. CONSTR (SUC (SUC (SUC (SUC 0)))) (@v. T)\n                                 (FCONS a (\\n. BOTTOM)))\n                            a /\\\n                            form' a) \\/\n                       (?a. a' =\n                            (\\a. CONSTR (SUC (SUC (SUC (SUC (SUC 0)))))\n                                 (@v. T)\n                                 (FCONS a (\\n. BOTTOM)))\n                            a /\\\n                            form' a)\n                       ==> form' a')\n                 ==> form' r) <=>\n        _dest_form (_mk_form r) = r)" 
     fingerprint: 3841970628360819245   
     conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a) (a (a (c (fun (loop) (fun (loop) (bool))) =) (a (c (fun (recspace (list (char))) (loop)) loop) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a)))) (v (loop) a))))) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) !) (l (v (recspace (list (char))) r) (a (a (c (fun (bool) (fun (bool) (bool))) =) (a (c (fun (fun (fun (recspace (list (char))) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (list (char))) (bool)) loop') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) !) (l (v (recspace (list (char))) a') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (list (char)) (bool)) (bool)) ?) (l (v (list (char)) a) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (l (v (list (char)) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (list (char)) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM)))) (v (list (char)) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a0) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (v (recspace (list (char))) a0)) (v (recspace (list (char))) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a0))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a0) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (v (recspace (list (char))) a0)) (v (recspace (list (char))) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a0))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a0) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (v (recspace (list (char))) a0)) (v (recspace (list (char))) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a0))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (l (v (recspace (list (char))) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))) (v (recspace (list (char))) a)))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a)))))) (a (c (fun (fun (recspace (list (char))) (bool)) (bool)) ?) (l (v (recspace (list (char))) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (v (recspace (list (char))) a')) (a (l (v (recspace (list (char))) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))) (v (recspace (list (char))) a)))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a))))))))))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) a')))))) (a (v (fun (recspace (list (char))) (bool)) loop') (v (recspace (list (char))) r)))))) (a (a (c (fun (recspace (list (char))) (fun (recspace (list (char))) (bool))) =) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (a (c (fun (recspace (list (char))) (loop)) loop) (v (recspace (list (char))) r)))) (v (recspace (list (char))) r))))))" 
     tag: TYPE_DEFINITION 
     type_definition { 
		type_name: "loop" 
		abs_name: "loop" 
		rep_name: "tuple_loop" 
		theorem_arg: 1638867084221279635 
	}
	library_tag: "c-DL.ml"
}

theorems { 
	fingerprint: 3589101974935092964   
	conclusion: "(a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (c (fun (fun (fun (recspace (loop)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (loop)) (bool)) stable_sy') (a (c (fun (fun (fun (recspace (loop)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (loop)) (bool)) tri_sy') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) a0') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) a) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (v (recspace (loop)) a)))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a)))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a1))))))))))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0')))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) a1') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) a) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a1))))))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (v (recspace (loop)) a)))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a))))))))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a1'))))))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a)))))))))" 
	tag: THEOREM 
	training_split: TRAINING
    library_tag: "c-DL.ml"
	pretty_printed: "|- ?a. !strF' strG'.\n           (!a0'. (?a. a0' = (\\a. CONSTR 0 a (\\n. BOTTOM)) a) \\/\n                  (?a. a0' =\n                       (\\a. CONSTR (SUC 0) (@v. T) (FCONS a (\\n. BOTTOM))) a /\\\n                       strF' a) \\/\n                  (?a0 a1.\n                       a0' =\n                       (\\a0 a1.\n                            CONSTR (SUC (SUC 0)) (@v. T)\n                            (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                       a0\n                       a1 /\\\n                       strF' a0 /\\\n                       strF' a1)\n                  ==> strF' a0') /\\\n           (!a1'. (?a. a1' =\n                       (\\a. CONSTR (SUC (SUC (SUC 0))) a (\\n. BOTTOM)) a) \\/\n                  (?a0 a1.\n                       a1' =\n                       (\\a0 a1.\n                            CONSTR (SUC (SUC (SUC (SUC 0)))) (@v. T)\n                            (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                       a0\n                       a1 /\\\n                       strG' a0 /\\\n                       strF' a1) \\/\n                  (?a0 a1.\n                       a1' =\n                       (\\a0 a1.\n                            CONSTR (SUC (SUC (SUC (SUC (SUC 0))))) (@v. T)\n                            (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                       a0\n                       a1 /\\\n                       strF' a0 /\\\n                       strG' a1) \\/\n                  (?a. a1' =\n                       (\\a. CONSTR (SUC (SUC (SUC (SUC (SUC (SUC 0))))))\n                            (@v. T)\n                            (FCONS a (\\n. BOTTOM)))\n                       a /\\\n                       strG' a)\n                  ==> strG' a1')\n           ==> strF' a"
	proof_function: "type_definition_helper"
}
theorems {
	pretty_printed: "|- (!a. _mk_strF (_dest_strF a) = a) /\\\n   (!r. (!strF' strG'.\n             (!a0'. (?a. a0' = (\\a. CONSTR 0 a (\\n. BOTTOM)) a) \\/\n                    (?a. a0' =\n                         (\\a. CONSTR (SUC 0) (@v. T) (FCONS a (\\n. BOTTOM)))\n                         a /\\\n                         strF' a) \\/\n                    (?a0 a1.\n                         a0' =\n                         (\\a0 a1.\n                              CONSTR (SUC (SUC 0)) (@v. T)\n                              (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                         a0\n                         a1 /\\\n                         strF' a0 /\\\n                         strF' a1)\n                    ==> strF' a0') /\\\n             (!a1'. (?a. a1' =\n                         (\\a. CONSTR (SUC (SUC (SUC 0))) a (\\n. BOTTOM)) a) \\/\n                    (?a0 a1.\n                         a1' =\n                         (\\a0 a1.\n                              CONSTR (SUC (SUC (SUC (SUC 0)))) (@v. T)\n                              (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                         a0\n                         a1 /\\\n                         strG' a0 /\\\n                         strF' a1) \\/\n                    (?a0 a1.\n                         a1' =\n                         (\\a0 a1.\n                              CONSTR (SUC (SUC (SUC (SUC (SUC 0))))) (@v. T)\n                              (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                         a0\n                         a1 /\\\n                         strF' a0 /\\\n                         strG' a1) \\/\n                    (?a. a1' =\n                         (\\a. CONSTR (SUC (SUC (SUC (SUC (SUC (SUC 0))))))\n                              (@v. T)\n                              (FCONS a (\\n. BOTTOM)))\n                         a /\\\n                         strG' a)\n                    ==> strG' a1')\n             ==> strF' r) <=>\n        _dest_strF (_mk_strF r) = r)"
	fingerprint: 3826835694184110572
	conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a) (a (a (c (fun (stable_sy) (fun (stable_sy) (bool))) =) (a (c (fun (recspace (loop)) (stable_sy)) stable_sy) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a)))) (v (stable_sy) a))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) r) (a (a (c (fun (bool) (fun (bool) (bool))) =) (a (c (fun (fun (fun (recspace (loop)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (loop)) (bool)) stable_sy') (a (c (fun (fun (fun (recspace (loop)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (loop)) (bool)) tri_sy') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) a0') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) a) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (v (recspace (loop)) a)))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a)))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a1))))))))))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0')))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) a1') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) a) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a1))))))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (v (recspace (loop)) a)))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a))))))))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a1'))))))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) r)))))))) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (a (c (fun (recspace (loop)) (stable_sy)) stable_sy) (v (recspace (loop)) r)))) (v (recspace (loop)) r))))))"
	tag: TYPE_DEFINITION
	type_definition {
		type_name: "stable_sy"
		abs_name: "stable_sy"
		rep_name: "tuple_stable_sy"
		theorem_arg: 3589101974935092964 
	}
	library_tag: "c-DL.ml"
}

theorems { 
	fingerprint: 2610494184795994960   
	conclusion: "(a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (c (fun (fun (fun (recspace (loop)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (loop)) (bool)) stable_sy') (a (c (fun (fun (fun (recspace (loop)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (loop)) (bool)) tri_sy') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) a0') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) a) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (v (recspace (loop)) a)))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a)))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a1))))))))))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0')))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) a1') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) a) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a1))))))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (v (recspace (loop)) a)))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a))))))))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a1'))))))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a)))))))))" 
	tag: THEOREM 
	training_split: TRAINING
    library_tag: "c-DL.ml"
	pretty_printed: "|- ?a. !strF' strG'.\n           (!a0'. (?a. a0' = (\\a. CONSTR 0 a (\\n. BOTTOM)) a) \\/\n                  (?a. a0' =\n                       (\\a. CONSTR (SUC 0) (@v. T) (FCONS a (\\n. BOTTOM))) a /\\\n                       strF' a) \\/\n                  (?a0 a1.\n                       a0' =\n                       (\\a0 a1.\n                            CONSTR (SUC (SUC 0)) (@v. T)\n                            (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                       a0\n                       a1 /\\\n                       strF' a0 /\\\n                       strF' a1)\n                  ==> strF' a0') /\\\n           (!a1'. (?a. a1' =\n                       (\\a. CONSTR (SUC (SUC (SUC 0))) a (\\n. BOTTOM)) a) \\/\n                  (?a0 a1.\n                       a1' =\n                       (\\a0 a1.\n                            CONSTR (SUC (SUC (SUC (SUC 0)))) (@v. T)\n                            (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                       a0\n                       a1 /\\\n                       strG' a0 /\\\n                       strF' a1) \\/\n                  (?a0 a1.\n                       a1' =\n                       (\\a0 a1.\n                            CONSTR (SUC (SUC (SUC (SUC (SUC 0))))) (@v. T)\n                            (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                       a0\n                       a1 /\\\n                       strF' a0 /\\\n                       strG' a1) \\/\n                  (?a. a1' =\n                       (\\a. CONSTR (SUC (SUC (SUC (SUC (SUC (SUC 0))))))\n                            (@v. T)\n                            (FCONS a (\\n. BOTTOM)))\n                       a /\\\n                       strG' a)\n                  ==> strG' a1')\n           ==> strG' a"
	proof_function: "type_definition_helper"
}
theorems {
	pretty_printed: "|- (!a. _mk_strG (_dest_strG a) = a) /\\\n   (!r. (!strF' strG'.\n             (!a0'. (?a. a0' = (\\a. CONSTR 0 a (\\n. BOTTOM)) a) \\/\n                    (?a. a0' =\n                         (\\a. CONSTR (SUC 0) (@v. T) (FCONS a (\\n. BOTTOM)))\n                         a /\\\n                         strF' a) \\/\n                    (?a0 a1.\n                         a0' =\n                         (\\a0 a1.\n                              CONSTR (SUC (SUC 0)) (@v. T)\n                              (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                         a0\n                         a1 /\\\n                         strF' a0 /\\\n                         strF' a1)\n                    ==> strF' a0') /\\\n             (!a1'. (?a. a1' =\n                         (\\a. CONSTR (SUC (SUC (SUC 0))) a (\\n. BOTTOM)) a) \\/\n                    (?a0 a1.\n                         a1' =\n                         (\\a0 a1.\n                              CONSTR (SUC (SUC (SUC (SUC 0)))) (@v. T)\n                              (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                         a0\n                         a1 /\\\n                         strG' a0 /\\\n                         strF' a1) \\/\n                    (?a0 a1.\n                         a1' =\n                         (\\a0 a1.\n                              CONSTR (SUC (SUC (SUC (SUC (SUC 0))))) (@v. T)\n                              (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n                         a0\n                         a1 /\\\n                         strF' a0 /\\\n                         strG' a1) \\/\n                    (?a. a1' =\n                         (\\a. CONSTR (SUC (SUC (SUC (SUC (SUC (SUC 0))))))\n                              (@v. T)\n                              (FCONS a (\\n. BOTTOM)))\n                         a /\\\n                         strG' a)\n                    ==> strG' a1')\n             ==> strG' r) <=>\n        _dest_strG (_mk_strG r) = r)"
	fingerprint: 2099107604823942015
	conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) a) (a (a (c (fun (tri_sy) (fun (tri_sy) (bool))) =) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (a (c (fun (tri_sy) (recspace (loop))) tuple_tri_sy) (v (tri_sy) a)))) (v (tri_sy) a))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) r) (a (a (c (fun (bool) (fun (bool) (bool))) =) (a (c (fun (fun (fun (recspace (loop)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (loop)) (bool)) stable_sy') (a (c (fun (fun (fun (recspace (loop)) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (loop)) (bool)) tri_sy') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) a0') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) a) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (v (recspace (loop)) a)))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a)))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a0')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a1))))))))))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0')))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) !) (l (v (recspace (loop)) a1') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) a) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a0) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (v (recspace (loop)) a0)) (v (recspace (loop)) a1)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (recspace (loop)) (bool)) stable_sy') (v (recspace (loop)) a0))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a1))))))))) (a (c (fun (fun (recspace (loop)) (bool)) (bool)) ?) (l (v (recspace (loop)) a) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (v (recspace (loop)) a1')) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (v (recspace (loop)) a)))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a))))))))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) a1'))))))) (a (v (fun (recspace (loop)) (bool)) tri_sy') (v (recspace (loop)) r)))))))) (a (a (c (fun (recspace (loop)) (fun (recspace (loop)) (bool))) =) (a (c (fun (tri_sy) (recspace (loop))) tuple_tri_sy) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (v (recspace (loop)) r)))) (v (recspace (loop)) r))))))"
	tag: TYPE_DEFINITION
	type_definition {
		type_name: "tri_sy"
		abs_name: "tri_sy"
		rep_name: "tuple_tri_sy"
		theorem_arg: 2610494184795994960 
	}
	library_tag: "c-DL.ml"
}

theorems { 
	fingerprint: 307508346377901639   
	conclusion: "(a (c (fun (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) (bool)) ?) (l (v (recspace (prod (stable_sy) (tri_sy))) a) (a (c (fun (fun (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) scs_v39') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) (bool)) !) (l (v (recspace (prod (stable_sy) (tri_sy))) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) a0) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) a1) (a (a (c (fun (recspace (prod (stable_sy) (tri_sy))) (fun (recspace (prod (stable_sy) (tri_sy))) (bool))) =) (v (recspace (prod (stable_sy) (tri_sy))) a)) (a (a (l (v (stable_sy) a0) (l (v (tri_sy) a1) (a (a (a (c (fun (num) (fun (prod (stable_sy) (tri_sy)) (fun (fun (num) (recspace (prod (stable_sy) (tri_sy)))) (recspace (prod (stable_sy) (tri_sy)))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (a (a (c (fun (stable_sy) (fun (tri_sy) (prod (stable_sy) (tri_sy)))) ,) (v (stable_sy) a0)) (v (tri_sy) a1))) (l (v (num) n) (c (recspace (prod (stable_sy) (tri_sy))) BOTTOM))))) (v (stable_sy) a0)) (v (tri_sy) a1)))))))) (a (v (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) scs_v39') (v (recspace (prod (stable_sy) (tri_sy))) a)))))) (a (v (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) scs_v39') (v (recspace (prod (stable_sy) (tri_sy))) a)))))))" 
	tag: THEOREM 
	training_split: TRAINING
    library_tag: "c-DL.ml"
	pretty_printed: "|- ?a. !seq'. (!a. (?a0 a1.\n                        a = (\\a0 a1. CONSTR 0 (a0,a1) (\\n. BOTTOM)) a0 a1)\n                   ==> seq' a)\n              ==> seq' a"
	proof_function: "type_definition_helper"
}
theorems {
	pretty_printed: "|- (!a. _mk_seq (_dest_seq a) = a) /\\\n   (!r. (!seq'. (!a. (?a0 a1.\n                          a = (\\a0 a1. CONSTR 0 (a0,a1) (\\n. BOTTOM)) a0 a1)\n                     ==> seq' a)\n                ==> seq' r) <=>\n        _dest_seq (_mk_seq r) = r)"
	fingerprint: 1194368629451720755
	conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (scs_v39) (bool)) (bool)) !) (l (v (scs_v39) a) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (a (c (fun (recspace (prod (stable_sy) (tri_sy))) (scs_v39)) scs_v39) (a (c (fun (scs_v39) (recspace (prod (stable_sy) (tri_sy)))) dest_scs_v39) (v (scs_v39) a)))) (v (scs_v39) a))))) (a (c (fun (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) (bool)) !) (l (v (recspace (prod (stable_sy) (tri_sy))) r) (a (a (c (fun (bool) (fun (bool) (bool))) =) (a (c (fun (fun (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) (bool)) (bool)) !) (l (v (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) scs_v39') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) (bool)) !) (l (v (recspace (prod (stable_sy) (tri_sy))) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) a0) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) a1) (a (a (c (fun (recspace (prod (stable_sy) (tri_sy))) (fun (recspace (prod (stable_sy) (tri_sy))) (bool))) =) (v (recspace (prod (stable_sy) (tri_sy))) a)) (a (a (l (v (stable_sy) a0) (l (v (tri_sy) a1) (a (a (a (c (fun (num) (fun (prod (stable_sy) (tri_sy)) (fun (fun (num) (recspace (prod (stable_sy) (tri_sy)))) (recspace (prod (stable_sy) (tri_sy)))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (a (a (c (fun (stable_sy) (fun (tri_sy) (prod (stable_sy) (tri_sy)))) ,) (v (stable_sy) a0)) (v (tri_sy) a1))) (l (v (num) n) (c (recspace (prod (stable_sy) (tri_sy))) BOTTOM))))) (v (stable_sy) a0)) (v (tri_sy) a1)))))))) (a (v (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) scs_v39') (v (recspace (prod (stable_sy) (tri_sy))) a)))))) (a (v (fun (recspace (prod (stable_sy) (tri_sy))) (bool)) scs_v39') (v (recspace (prod (stable_sy) (tri_sy))) r)))))) (a (a (c (fun (recspace (prod (stable_sy) (tri_sy))) (fun (recspace (prod (stable_sy) (tri_sy))) (bool))) =) (a (c (fun (scs_v39) (recspace (prod (stable_sy) (tri_sy)))) dest_scs_v39) (a (c (fun (recspace (prod (stable_sy) (tri_sy))) (scs_v39)) scs_v39) (v (recspace (prod (stable_sy) (tri_sy))) r)))) (v (recspace (prod (stable_sy) (tri_sy))) r))))))"
	tag: TYPE_DEFINITION
	type_definition {
		type_name: "scs_v39"
		abs_name: "scs_v39"
		rep_name: "dest_scs_v39"
		theorem_arg: 307508346377901639 
	}
	library_tag: "c-DL.ml"
}










theorems { 
	fingerprint: 1003439023960552299   
	conclusion: "(a (a (c (fun (fun (num) (hypermap)) (fun (fun (num) (hypermap)) (bool))) =) (c (fun (num) (hypermap)) nabs)) (l (v (num) a) (a (c (fun (recspace (num)) (hypermap)) hypermap) (a (l (v (num) a) (a (a (a (c (fun (num) (fun (num) (fun (fun (num) (recspace (num))) (recspace (num))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (num) a)) (l (v (num) n) (c (recspace (num)) BOTTOM)))) (v (num) a)))))"
	tag: DEFINITION 
	definition {
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (num) (hypermap)) (fun (fun (num) (hypermap)) (bool))) =) (v (fun (num) (hypermap)) nabs)) (l (v (num) a) (a (c (fun (recspace (num)) (hypermap)) hypermap) (a (l (v (num) a) (a (a (a (c (fun (num) (fun (num) (fun (fun (num) (recspace (num))) (recspace (num))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (num) a)) (l (v (num) n) (c (recspace (num)) BOTTOM)))) (v (num) a)))))" 
		constants: "nabs"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- String = (\\a. _mk_string ((\\a. CONSTR 0 a (\\n. BOTTOM)) a))"
}

theorems { 
	fingerprint: 3383985040323506884   
	conclusion: "(a (a (c (fun (fun (list (char)) (loop)) (fun (fun (list (char)) (loop)) (bool))) =) (c (fun (list (char)) (loop)) drop0)) (l (v (list (char)) a) (a (c (fun (recspace (list (char))) (loop)) loop) (a (l (v (list (char)) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (list (char)) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM)))) (v (list (char)) a)))))" 
	tag: DEFINITION 
	definition { 
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (list (char)) (loop)) (fun (fun (list (char)) (loop)) (bool))) =) (v (fun (list (char)) (loop)) drop0)) (l (v (list (char)) a) (a (c (fun (recspace (list (char))) (loop)) loop) (a (l (v (list (char)) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (list (char)) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM)))) (v (list (char)) a)))))" 
		constants: "drop0"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- Atom = (\\a. _mk_form ((\\a. CONSTR 0 a (\\n. BOTTOM)) a))"
}

theorems { 
	fingerprint: 926798031110277676   
	conclusion: "(a (a (c (fun (fun (loop) (fun (loop) (loop))) (fun (fun (loop) (fun (loop) (loop))) (bool))) =) (c (fun (loop) (fun (loop) (loop))) **.)) (l (v (loop) a0) (l (v (loop) a1) (a (c (fun (recspace (list (char))) (loop)) loop) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a0))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a1)))))))" 
	tag: DEFINITION 
	definition { 
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (loop) (fun (loop) (loop))) (fun (fun (loop) (fun (loop) (loop))) (bool))) =) (v (fun (loop) (fun (loop) (loop))) **.)) (l (v (loop) a0) (l (v (loop) a1) (a (c (fun (recspace (list (char))) (loop)) loop) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a0))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a1)))))))" 
		constants: "**."
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- /. =\n   (\\a0 a1.\n        _mk_form\n        ((\\a0 a1. CONSTR (SUC 0) (@v. T) (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n         (_dest_form a0)\n        (_dest_form a1)))"
}

theorems { 
	fingerprint: 377448512341562944   
	conclusion: "(a (a (c (fun (fun (loop) (fun (loop) (loop))) (fun (fun (loop) (fun (loop) (loop))) (bool))) =) (c (fun (loop) (fun (loop) (loop))) *.)) (l (v (loop) a0) (l (v (loop) a1) (a (c (fun (recspace (list (char))) (loop)) loop) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a0))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a1)))))))" 
	tag: DEFINITION 
	definition { 
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (loop) (fun (loop) (loop))) (fun (fun (loop) (fun (loop) (loop))) (bool))) =) (v (fun (loop) (fun (loop) (loop))) *.)) (l (v (loop) a0) (l (v (loop) a1) (a (c (fun (recspace (list (char))) (loop)) loop) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a0))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a1)))))))" 
		constants: "*."
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- (**) =\n   (\\a0 a1.\n        _mk_form\n        ((\\a0 a1.\n              CONSTR (SUC (SUC 0)) (@v. T) (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n         (_dest_form a0)\n        (_dest_form a1)))"
}
  
theorems { 
	fingerprint: 4077204356540158397   
	conclusion: "(a (a (c (fun (fun (loop) (fun (loop) (loop))) (fun (fun (loop) (fun (loop) (loop))) (bool))) =) (c (fun (loop) (fun (loop) (loop))) *|)) (l (v (loop) a0) (l (v (loop) a1) (a (c (fun (recspace (list (char))) (loop)) loop) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a0))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a1)))))))" 
	tag: DEFINITION 
	definition { 
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (loop) (fun (loop) (loop))) (fun (fun (loop) (fun (loop) (loop))) (bool))) =) (v (fun (loop) (fun (loop) (loop))) *|)) (l (v (loop) a0) (l (v (loop) a1) (a (c (fun (recspace (list (char))) (loop)) loop) (a (a (l (v (recspace (list (char))) a0) (l (v (recspace (list (char))) a1) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a0)) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a1)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a0))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a1)))))))" 
		constants: "*|"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- \\. =\n   (\\a0 a1.\n        _mk_form\n        ((\\a0 a1.\n              CONSTR (SUC (SUC (SUC 0))) (@v. T)\n              (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n         (_dest_form a0)\n        (_dest_form a1)))"
}

theorems { 
	fingerprint: 3697349913887620001   
	conclusion: "(a (a (c (fun (fun (loop) (loop)) (fun (fun (loop) (loop)) (bool))) =) (c (fun (loop) (loop)) ssqrt)) (l (v (loop) a) (a (c (fun (recspace (list (char))) (loop)) loop) (a (l (v (recspace (list (char))) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a))))))" 
	tag: DEFINITION 
	definition { 
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (loop) (loop)) (fun (fun (loop) (loop)) (bool))) =) (v (fun (loop) (loop)) ssqrt)) (l (v (loop) a) (a (c (fun (recspace (list (char))) (loop)) loop) (a (l (v (recspace (list (char))) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a))))))" 
		constants: "ssqrt"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- <> =\n   (\\a. _mk_form\n        ((\\a. CONSTR (SUC (SUC (SUC (SUC 0)))) (@v. T) (FCONS a (\\n. BOTTOM)))\n        (_dest_form a)))"
}

theorems { 
	fingerprint: 3475735206926897086   
	conclusion: "(a (a (c (fun (fun (loop) (loop)) (fun (fun (loop) (loop)) (bool))) =) (c (fun (loop) (loop)) halfatn)) (l (v (loop) a) (a (c (fun (recspace (list (char))) (loop)) loop) (a (l (v (recspace (list (char))) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a))))))" 
	tag: DEFINITION 
	definition { 
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (loop) (loop)) (fun (fun (loop) (loop)) (bool))) =) (v (fun (loop) (loop)) halfatn)) (l (v (loop) a) (a (c (fun (recspace (list (char))) (loop)) loop) (a (l (v (recspace (list (char))) a) (a (a (a (c (fun (num) (fun (list (char)) (fun (fun (num) (recspace (list (char)))) (recspace (list (char)))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (list (char)) (bool)) (list (char))) @) (l (v (list (char)) v) (c (bool) T)))) (a (a (c (fun (recspace (list (char))) (fun (fun (num) (recspace (list (char)))) (fun (num) (recspace (list (char)))))) FCONS) (v (recspace (list (char))) a)) (l (v (num) n) (c (recspace (list (char))) BOTTOM))))) (a (c (fun (loop) (recspace (list (char)))) tuple_loop) (v (loop) a))))))" 
		constants: "halfatn"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- || =\n   (\\a. _mk_form\n        ((\\a. CONSTR (SUC (SUC (SUC (SUC (SUC 0))))) (@v. T)\n              (FCONS a (\\n. BOTTOM)))\n        (_dest_form a)))"
}

theorems { 
	fingerprint: 26857811557205160   
	conclusion: "(a (a (c (fun (fun (loop) (stable_sy)) (fun (fun (loop) (stable_sy)) (bool))) =) (c (fun (loop) (stable_sy)) mark_term)) (l (v (loop) a) (a (c (fun (recspace (loop)) (stable_sy)) stable_sy) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))"
	tag: DEFINITION 
	definition {
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (loop) (stable_sy)) (fun (fun (loop) (stable_sy)) (bool))) =) (v (fun (loop) (stable_sy)) mark_term)) (l (v (loop) a) (a (c (fun (recspace (loop)) (stable_sy)) stable_sy) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))" 
		constants: "mark_term"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- ff = (\\a. _mk_strF ((\\a. CONSTR 0 a (\\n. BOTTOM)) a))"
}

theorems { 
	fingerprint: 2123853867543201202   
	conclusion: "(a (a (c (fun (fun (stable_sy) (stable_sy)) (fun (fun (stable_sy) (stable_sy)) (bool))) =) (c (fun (stable_sy) (stable_sy)) twopow)) (l (v (stable_sy) a) (a (c (fun (recspace (loop)) (stable_sy)) stable_sy) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a))))))"
	tag: DEFINITION 
	definition {
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (stable_sy) (stable_sy)) (fun (fun (stable_sy) (stable_sy)) (bool))) =) (v (fun (stable_sy) (stable_sy)) twopow)) (l (v (stable_sy) a) (a (c (fun (recspace (loop)) (stable_sy)) stable_sy) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a))))))" 
		constants: "twopow"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- <>^ =\n   (\\a. _mk_strF\n        ((\\a. CONSTR (SUC 0) (@v. T) (FCONS a (\\n. BOTTOM))) (_dest_strF a)))"
}

theorems { 
	fingerprint: 4399134313084249092   
	conclusion: "(a (a (c (fun (fun (stable_sy) (fun (stable_sy) (stable_sy))) (fun (fun (stable_sy) (fun (stable_sy) (stable_sy))) (bool))) =) (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:)) (l (v (stable_sy) a0) (l (v (stable_sy) a1) (a (c (fun (recspace (loop)) (stable_sy)) stable_sy) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a0))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a1)))))))"
	tag: DEFINITION 
	definition {
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (stable_sy) (fun (stable_sy) (stable_sy))) (fun (fun (stable_sy) (fun (stable_sy) (stable_sy))) (bool))) =) (v (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:)) (l (v (stable_sy) a0) (l (v (stable_sy) a1) (a (c (fun (recspace (loop)) (stable_sy)) stable_sy) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a0))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a1)))))))" 
		constants: "*:"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- **^ =\n   (\\a0 a1.\n        _mk_strF\n        ((\\a0 a1.\n              CONSTR (SUC (SUC 0)) (@v. T) (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n         (_dest_strF a0)\n        (_dest_strF a1)))"
}

theorems { 
	fingerprint: 3312368905117307733   
	conclusion: "(a (a (c (fun (fun (loop) (tri_sy)) (fun (fun (loop) (tri_sy)) (bool))) =) (c (fun (loop) (tri_sy)) TAGB)) (l (v (loop) a) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))"
	tag: DEFINITION 
	definition {
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (loop) (tri_sy)) (fun (fun (loop) (tri_sy)) (bool))) =) (v (fun (loop) (tri_sy)) TAGB)) (l (v (loop) a) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (a (l (v (loop) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))) (v (loop) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM)))) (v (loop) a)))))" 
		constants: "TAGB"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- gg = (\\a. _mk_strG ((\\a. CONSTR (SUC (SUC (SUC 0))) a (\\n. BOTTOM)) a))"
}

theorems { 
	fingerprint: 4206720013620777545   
	conclusion: "(a (a (c (fun (fun (stable_sy) (fun (tri_sy) (tri_sy))) (fun (fun (stable_sy) (fun (tri_sy) (tri_sy))) (bool))) =) (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|)) (l (v (stable_sy) a0) (l (v (tri_sy) a1) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a0))) (a (c (fun (tri_sy) (recspace (loop))) tuple_tri_sy) (v (tri_sy) a1)))))))"
	tag: DEFINITION 
	definition {
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (stable_sy) (fun (tri_sy) (tri_sy))) (fun (fun (stable_sy) (fun (tri_sy) (tri_sy))) (bool))) =) (v (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|)) (l (v (stable_sy) a0) (l (v (tri_sy) a1) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0)))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a0))) (a (c (fun (tri_sy) (recspace (loop))) tuple_tri_sy) (v (tri_sy) a1)))))))" 
		constants: "**|"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- \\.^ =\n   (\\a0 a1.\n        _mk_strG\n        ((\\a0 a1.\n              CONSTR (SUC (SUC (SUC (SUC (SUC 0))))) (@v. T)\n              (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n         (_dest_strF a0)\n        (_dest_strG a1)))"
}

theorems { 
	fingerprint: 298449629905704647   
	conclusion: "(a (a (c (fun (fun (tri_sy) (fun (stable_sy) (tri_sy))) (fun (fun (tri_sy) (fun (stable_sy) (tri_sy))) (bool))) =) (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:)) (l (v (tri_sy) a0) (l (v (stable_sy) a1) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (a (c (fun (tri_sy) (recspace (loop))) tuple_tri_sy) (v (tri_sy) a0))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a1)))))))"
	tag: DEFINITION 
	definition {
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (tri_sy) (fun (stable_sy) (tri_sy))) (fun (fun (tri_sy) (fun (stable_sy) (tri_sy))) (bool))) =) (v (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:)) (l (v (tri_sy) a0) (l (v (stable_sy) a1) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (a (a (l (v (recspace (loop)) a0) (l (v (recspace (loop)) a1) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a0)) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a1)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))))) (a (c (fun (tri_sy) (recspace (loop))) tuple_tri_sy) (v (tri_sy) a0))) (a (c (fun (stable_sy) (recspace (loop))) tuple_stable_sy) (v (stable_sy) a1)))))))" 
		constants: "**:"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- /.^ =\n   (\\a0 a1.\n        _mk_strG\n        ((\\a0 a1.\n              CONSTR (SUC (SUC (SUC (SUC 0)))) (@v. T)\n              (FCONS a0 (FCONS a1 (\\n. BOTTOM))))\n         (_dest_strG a0)\n        (_dest_strF a1)))"
}

theorems { 
	fingerprint: 861209937623601847   
	conclusion: "(a (a (c (fun (fun (tri_sy) (tri_sy)) (fun (fun (tri_sy) (tri_sy)) (bool))) =) (c (fun (tri_sy) (tri_sy)) halfatn4)) (l (v (tri_sy) a) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (a (c (fun (tri_sy) (recspace (loop))) tuple_tri_sy) (v (tri_sy) a))))))"
	tag: DEFINITION 
	definition {
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (tri_sy) (tri_sy)) (fun (fun (tri_sy) (tri_sy)) (bool))) =) (v (fun (tri_sy) (tri_sy)) halfatn4)) (l (v (tri_sy) a) (a (c (fun (recspace (loop)) (tri_sy)) tri_sy) (a (l (v (recspace (loop)) a) (a (a (a (c (fun (num) (fun (loop) (fun (fun (num) (recspace (loop))) (recspace (loop))))) CONSTR) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) SUC) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))))))))) (a (c (fun (fun (loop) (bool)) (loop)) @) (l (v (loop) v) (c (bool) T)))) (a (a (c (fun (recspace (loop)) (fun (fun (num) (recspace (loop))) (fun (num) (recspace (loop))))) FCONS) (v (recspace (loop)) a)) (l (v (num) n) (c (recspace (loop)) BOTTOM))))) (a (c (fun (tri_sy) (recspace (loop))) tuple_tri_sy) (v (tri_sy) a))))))" 
		constants: "halfatn4"
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- ||^ =\n   (\\a. _mk_strG\n        ((\\a. CONSTR (SUC (SUC (SUC (SUC (SUC (SUC 0)))))) (@v. T)\n              (FCONS a (\\n. BOTTOM)))\n        (_dest_strG a)))"
}

theorems { 
	fingerprint: 699056073282616836   
	conclusion: "(a (a (c (fun (fun (stable_sy) (fun (tri_sy) (scs_v39))) (fun (fun (stable_sy) (fun (tri_sy) (scs_v39))) (bool))) =) (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.)) (l (v (stable_sy) a0) (l (v (tri_sy) a1) (a (c (fun (recspace (prod (stable_sy) (tri_sy))) (scs_v39)) scs_v39) (a (a (l (v (stable_sy) a0) (l (v (tri_sy) a1) (a (a (a (c (fun (num) (fun (prod (stable_sy) (tri_sy)) (fun (fun (num) (recspace (prod (stable_sy) (tri_sy)))) (recspace (prod (stable_sy) (tri_sy)))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (a (a (c (fun (stable_sy) (fun (tri_sy) (prod (stable_sy) (tri_sy)))) ,) (v (stable_sy) a0)) (v (tri_sy) a1))) (l (v (num) n) (c (recspace (prod (stable_sy) (tri_sy))) BOTTOM))))) (v (stable_sy) a0)) (v (tri_sy) a1))))))"
	tag: DEFINITION 
	definition {
		definition_type: "DRULE"  
		definition_term: "(a (a (c (fun (fun (stable_sy) (fun (tri_sy) (scs_v39))) (fun (fun (stable_sy) (fun (tri_sy) (scs_v39))) (bool))) =) (v (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.)) (l (v (stable_sy) a0) (l (v (tri_sy) a1) (a (c (fun (recspace (prod (stable_sy) (tri_sy))) (scs_v39)) scs_v39) (a (a (l (v (stable_sy) a0) (l (v (tri_sy) a1) (a (a (a (c (fun (num) (fun (prod (stable_sy) (tri_sy)) (fun (fun (num) (recspace (prod (stable_sy) (tri_sy)))) (recspace (prod (stable_sy) (tri_sy)))))) CONSTR) (a (c (fun (num) (num)) NUMERAL) (c (num) _0))) (a (a (c (fun (stable_sy) (fun (tri_sy) (prod (stable_sy) (tri_sy)))) ,) (v (stable_sy) a0)) (v (tri_sy) a1))) (l (v (num) n) (c (recspace (prod (stable_sy) (tri_sy))) BOTTOM))))) (v (stable_sy) a0)) (v (tri_sy) a1))))))" 
		constants: "<=."
	} 
	library_tag: "c-DL.ml"
	pretty_printed: "|- --> = (\\a0 a1. _mk_seq ((\\a0 a1. CONSTR 0 (a0,a1) (\\n. BOTTOM)) a0 a1))"
}









theorems {
  conclusion:  "(a (c (fun (fun (fun (hypermap) (bool)) (bool)) (bool)) !) (l (v (fun (hypermap) (bool)) P) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (num) (bool)) (bool)) !) (l (v (num) a) (a (v (fun (hypermap) (bool)) P) (a (c (fun (num) (hypermap)) nabs) (v (num) a)))))) (a (c (fun (fun (hypermap) (bool)) (bool)) !) (l (v (hypermap) x) (a (v (fun (hypermap) (bool)) P) (v (hypermap) x)))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 2020290261130128800
  library_tag: "c-DL.ml"
  pretty_printed: "|- !P. (!a. P (String a)) ==> (!x. P x)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2020290261130128800
}

theorems {
  conclusion:  "(a (c (fun (fun (fun (num) Z) (bool)) (bool)) !) (l (v (fun (num) Z) nabs') (a (c (fun (fun (fun (hypermap) Z) (bool)) (bool)) ?) (l (v (fun (hypermap) Z) fn) (a (c (fun (fun (num) (bool)) (bool)) !) (l (v (num) a) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (hypermap) Z) fn) (a (c (fun (num) (hypermap)) nabs) (v (num) a)))) (a (v (fun (num) Z) nabs') (v (num) a)))))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 49032445575252724
  library_tag: "c-DL.ml"
  pretty_printed: "|- !String'. ?fn. !a. fn (String a) = String' a"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 49032445575252724
}

theorems {
  conclusion:  "(a (c (fun (fun (fun (loop) (bool)) (bool)) (bool)) !) (l (v (fun (loop) (bool)) P) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (list (char)) (bool)) (bool)) !) (l (v (list (char)) a) (a (v (fun (loop) (bool)) P) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a0) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a1) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (loop) (bool)) P) (v (loop) a0))) (a (v (fun (loop) (bool)) P) (v (loop) a1)))) (a (v (fun (loop) (bool)) P) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) a0)) (v (loop) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a0) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a1) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (loop) (bool)) P) (v (loop) a0))) (a (v (fun (loop) (bool)) P) (v (loop) a1)))) (a (v (fun (loop) (bool)) P) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) a0)) (v (loop) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a0) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a1) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (loop) (bool)) P) (v (loop) a0))) (a (v (fun (loop) (bool)) P) (v (loop) a1)))) (a (v (fun (loop) (bool)) P) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) a0)) (v (loop) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (loop) (bool)) P) (v (loop) a))) (a (v (fun (loop) (bool)) P) (a (c (fun (loop) (loop)) ssqrt) (v (loop) a))))))) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (loop) (bool)) P) (v (loop) a))) (a (v (fun (loop) (bool)) P) (a (c (fun (loop) (loop)) halfatn) (v (loop) a)))))))))))) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) x) (a (v (fun (loop) (bool)) P) (v (loop) x)))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 3969235927072123120
  library_tag: "c-DL.ml"
  pretty_printed: "|- !P. (!a. P (Atom a)) /\ (!a0 a1. P a0 /\ P a1 ==> P (/. a0 a1)) /\ (!a0 a1. P a0 /\ P a1 ==> P (a0 ** a1)) /\ (!a0 a1. P a0 /\ P a1 ==> P (\. a0 a1)) /\ (!a. P a ==> P (<> a)) /\ (!a. P a ==> P (|| a)) ==> (!x. P x)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 3969235927072123120
}

theorems {
  conclusion:  "(a (c (fun (fun (fun (list (char)) Z) (bool)) (bool)) !) (l (v (fun (list (char)) Z) f0) (a (c (fun (fun (fun (loop) (fun (loop) (fun Z (fun Z Z)))) (bool)) (bool)) !) (l (v (fun (loop) (fun (loop) (fun Z (fun Z Z)))) f1) (a (c (fun (fun (fun (loop) (fun (loop) (fun Z (fun Z Z)))) (bool)) (bool)) !) (l (v (fun (loop) (fun (loop) (fun Z (fun Z Z)))) f2) (a (c (fun (fun (fun (loop) (fun (loop) (fun Z (fun Z Z)))) (bool)) (bool)) !) (l (v (fun (loop) (fun (loop) (fun Z (fun Z Z)))) f3) (a (c (fun (fun (fun (loop) (fun Z Z)) (bool)) (bool)) !) (l (v (fun (loop) (fun Z Z)) f4) (a (c (fun (fun (fun (loop) (fun Z Z)) (bool)) (bool)) !) (l (v (fun (loop) (fun Z Z)) f5) (a (c (fun (fun (fun (loop) Z) (bool)) (bool)) ?) (l (v (fun (loop) Z) fn) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (list (char)) (bool)) (bool)) !) (l (v (list (char)) a) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (loop) Z) fn) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) a)))) (a (v (fun (list (char)) Z) f0) (v (list (char)) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a0) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a1) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (loop) Z) fn) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) a0)) (v (loop) a1)))) (a (a (a (a (v (fun (loop) (fun (loop) (fun Z (fun Z Z)))) f1) (v (loop) a0)) (v (loop) a1)) (a (v (fun (loop) Z) fn) (v (loop) a0))) (a (v (fun (loop) Z) fn) (v (loop) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a0) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a1) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (loop) Z) fn) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) a0)) (v (loop) a1)))) (a (a (a (a (v (fun (loop) (fun (loop) (fun Z (fun Z Z)))) f2) (v (loop) a0)) (v (loop) a1)) (a (v (fun (loop) Z) fn) (v (loop) a0))) (a (v (fun (loop) Z) fn) (v (loop) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a0) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a1) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (loop) Z) fn) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) a0)) (v (loop) a1)))) (a (a (a (a (v (fun (loop) (fun (loop) (fun Z (fun Z Z)))) f3) (v (loop) a0)) (v (loop) a1)) (a (v (fun (loop) Z) fn) (v (loop) a0))) (a (v (fun (loop) Z) fn) (v (loop) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (loop) Z) fn) (a (c (fun (loop) (loop)) ssqrt) (v (loop) a)))) (a (a (v (fun (loop) (fun Z Z)) f4) (v (loop) a)) (a (v (fun (loop) Z) fn) (v (loop) a))))))) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (loop) Z) fn) (a (c (fun (loop) (loop)) halfatn) (v (loop) a)))) (a (a (v (fun (loop) (fun Z Z)) f5) (v (loop) a)) (a (v (fun (loop) Z) fn) (v (loop) a)))))))))))))))))))))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 1675702177114394655
  library_tag: "c-DL.ml"
  pretty_printed: "|- !f0 f1 f2 f3 f4 f5. ?fn. (!a. fn (Atom a) = f0 a) /\ (!a0 a1. fn (/. a0 a1) = f1 a0 a1 (fn a0) (fn a1)) /\ (!a0 a1. fn (a0 ** a1) = f2 a0 a1 (fn a0) (fn a1)) /\ (!a0 a1. fn (\. a0 a1) = f3 a0 a1 (fn a0) (fn a1)) /\ (!a. fn (<> a) = f4 a (fn a)) /\ (!a. fn (|| a) = f5 a (fn a))"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1675702177114394655
}

theorems {
  conclusion:  "(a (c (fun (fun (fun (stable_sy) (bool)) (bool)) (bool)) !) (l (v (fun (stable_sy) (bool)) P0) (a (c (fun (fun (fun (tri_sy) (bool)) (bool)) (bool)) !) (l (v (fun (tri_sy) (bool)) P1) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a) (a (v (fun (stable_sy) (bool)) P0) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (stable_sy) (bool)) P0) (v (stable_sy) a))) (a (v (fun (stable_sy) (bool)) P0) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) a))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a0) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a1) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (stable_sy) (bool)) P0) (v (stable_sy) a0))) (a (v (fun (stable_sy) (bool)) P0) (v (stable_sy) a1)))) (a (v (fun (stable_sy) (bool)) P0) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) a0)) (v (stable_sy) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a) (a (v (fun (tri_sy) (bool)) P1) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) a0) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a1) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (tri_sy) (bool)) P1) (v (tri_sy) a0))) (a (v (fun (stable_sy) (bool)) P0) (v (stable_sy) a1)))) (a (v (fun (tri_sy) (bool)) P1) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) a0)) (v (stable_sy) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a0) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) a1) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (stable_sy) (bool)) P0) (v (stable_sy) a0))) (a (v (fun (tri_sy) (bool)) P1) (v (tri_sy) a1)))) (a (v (fun (tri_sy) (bool)) P1) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) a0)) (v (tri_sy) a1))))))))) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (tri_sy) (bool)) P1) (v (tri_sy) a))) (a (v (fun (tri_sy) (bool)) P1) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) a))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) x0) (a (v (fun (stable_sy) (bool)) P0) (v (stable_sy) x0))))) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) x1) (a (v (fun (tri_sy) (bool)) P1) (v (tri_sy) x1))))))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 3374399985079459049
  library_tag: "c-DL.ml"
  pretty_printed: "|- !P0 P1. (!a. P0 (ff a)) /\ (!a. P0 a ==> P0 (<>^ a)) /\ (!a0 a1. P0 a0 /\ P0 a1 ==> P0 (**^ a0 a1)) /\ (!a. P1 (gg a)) /\ (!a0 a1. P1 a0 /\ P0 a1 ==> P1 (/.^ a0 a1)) /\ (!a0 a1. P0 a0 /\ P1 a1 ==> P1 (\.^ a0 a1)) /\ (!a. P1 a ==> P1 (||^ a))         ==> (!x0. P0 x0) /\ (!x1. P1 x1)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 3374399985079459049
}

theorems {
  conclusion:  "(a (c (fun (fun (fun (loop) Z) (bool)) (bool)) !) (l (v (fun (loop) Z) mark_term') (a (c (fun (fun (fun (stable_sy) (fun Z Z)) (bool)) (bool)) !) (l (v (fun (stable_sy) (fun Z Z)) twopow') (a (c (fun (fun (fun (stable_sy) (fun (stable_sy) (fun Z (fun Z Z)))) (bool)) (bool)) !) (l (v (fun (stable_sy) (fun (stable_sy) (fun Z (fun Z Z)))) *:') (a (c (fun (fun (fun (loop) Z) (bool)) (bool)) !) (l (v (fun (loop) Z) TAGB') (a (c (fun (fun (fun (tri_sy) (fun (stable_sy) (fun Z (fun Z Z)))) (bool)) (bool)) !) (l (v (fun (tri_sy) (fun (stable_sy) (fun Z (fun Z Z)))) **:') (a (c (fun (fun (fun (stable_sy) (fun (tri_sy) (fun Z (fun Z Z)))) (bool)) (bool)) !) (l (v (fun (stable_sy) (fun (tri_sy) (fun Z (fun Z Z)))) **|') (a (c (fun (fun (fun (tri_sy) (fun Z Z)) (bool)) (bool)) !) (l (v (fun (tri_sy) (fun Z Z)) halfatn4') (a (c (fun (fun (fun (stable_sy) Z) (bool)) (bool)) ?) (l (v (fun (stable_sy) Z) fn0) (a (c (fun (fun (fun (tri_sy) Z) (bool)) (bool)) ?) (l (v (fun (tri_sy) Z) fn1) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (stable_sy) Z) fn0) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) a)))) (a (v (fun (loop) Z) mark_term') (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (stable_sy) Z) fn0) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) a)))) (a (a (v (fun (stable_sy) (fun Z Z)) twopow') (v (stable_sy) a)) (a (v (fun (stable_sy) Z) fn0) (v (stable_sy) a))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a0) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a1) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (stable_sy) Z) fn0) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) a0)) (v (stable_sy) a1)))) (a (a (a (a (v (fun (stable_sy) (fun (stable_sy) (fun Z (fun Z Z)))) *:') (v (stable_sy) a0)) (v (stable_sy) a1)) (a (v (fun (stable_sy) Z) fn0) (v (stable_sy) a0))) (a (v (fun (stable_sy) Z) fn0) (v (stable_sy) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) a) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (tri_sy) Z) fn1) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) a)))) (a (v (fun (loop) Z) TAGB') (v (loop) a)))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) a0) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a1) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (tri_sy) Z) fn1) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) a0)) (v (stable_sy) a1)))) (a (a (a (a (v (fun (tri_sy) (fun (stable_sy) (fun Z (fun Z Z)))) **:') (v (tri_sy) a0)) (v (stable_sy) a1)) (a (v (fun (tri_sy) Z) fn1) (v (tri_sy) a0))) (a (v (fun (stable_sy) Z) fn0) (v (stable_sy) a1))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a0) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) a1) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (tri_sy) Z) fn1) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) a0)) (v (tri_sy) a1)))) (a (a (a (a (v (fun (stable_sy) (fun (tri_sy) (fun Z (fun Z Z)))) **|') (v (stable_sy) a0)) (v (tri_sy) a1)) (a (v (fun (stable_sy) Z) fn0) (v (stable_sy) a0))) (a (v (fun (tri_sy) Z) fn1) (v (tri_sy) a1))))))))) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) a) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (tri_sy) Z) fn1) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) a)))) (a (a (v (fun (tri_sy) (fun Z Z)) halfatn4') (v (tri_sy) a)) (a (v (fun (tri_sy) Z) fn1) (v (tri_sy) a))))))))))))))))))))))))))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 412200205479316455
  library_tag: "c-DL.ml"
  pretty_printed: "|- !ff' <>^' **^' gg' /.^' \.^' ||^'. ?fn0 fn1. (!a. fn0 (ff a) = ff' a) /\ (!a. fn0 (<>^ a) = <>^' a (fn0 a)) /\ (!a0 a1. fn0 (**^ a0 a1) = **^' a0 a1 (fn0 a0) (fn0 a1)) /\ (!a. fn1 (gg a) = gg' a) /\ (!a0 a1. fn1 (/.^ a0 a1) = /.^' a0 a1 (fn1 a0) (fn0 a1)) /\ (!a0 a1. fn1 (\.^ a0 a1) = \.^' a0 a1 (fn0 a0) (fn1 a1)) /\ (!a. fn1 (||^ a) = ||^' a (fn1 a))"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 412200205479316455
}

theorems {
  conclusion:  "(a (c (fun (fun (fun (scs_v39) (bool)) (bool)) (bool)) !) (l (v (fun (scs_v39) (bool)) P) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a0) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) a1) (a (v (fun (scs_v39) (bool)) P) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) a0)) (v (tri_sy) a1)))))))) (a (c (fun (fun (scs_v39) (bool)) (bool)) !) (l (v (scs_v39) x) (a (v (fun (scs_v39) (bool)) P) (v (scs_v39) x)))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 810571157016681631
  library_tag: "c-DL.ml"
  pretty_printed: "|- !P. (!a0 a1. P (--> a0 a1)) ==> (!x. P x)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 810571157016681631
}

theorems {
  conclusion:  "(a (c (fun (fun (fun (stable_sy) (fun (tri_sy) Z)) (bool)) (bool)) !) (l (v (fun (stable_sy) (fun (tri_sy) Z)) <=.') (a (c (fun (fun (fun (scs_v39) Z) (bool)) (bool)) ?) (l (v (fun (scs_v39) Z) fn) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) a0) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) a1) (a (a (c (fun Z (fun Z (bool))) =) (a (v (fun (scs_v39) Z) fn) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) a0)) (v (tri_sy) a1)))) (a (a (v (fun (stable_sy) (fun (tri_sy) Z)) <=.') (v (stable_sy) a0)) (v (tri_sy) a1)))))))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 3404280058620619864
  library_tag: "c-DL.ml"
  pretty_printed: "|- !-->'. ?fn. !a0 a1. fn (--> a0 a1) = -->' a0 a1"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 3404280058620619864
}









theorems {
  conclusion:  "(a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (list (char)) (bool)) (bool)) !) (l (v (list (char)) p) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) Y)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z))))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z)))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (stable_sy) Z))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Z))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B)))) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B))))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B)))) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Y)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A)))) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Y)) (v (stable_sy) X)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A)))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))))))))))))))))))))))))))))"
  tag: DEFINITION
  fingerprint: 51220887018286029
  definition {
    definition_type: "INDUCTIVE"
    definition_term: "(a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (list (char)) (bool)) (bool)) !) (l (v (list (char)) p) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) Y)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z))))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z)))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (stable_sy) Z))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Z))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B)))) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B))))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B)))) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Y)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A)))) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Y)) (v (stable_sy) X)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A)))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))))))))))))))))))))))))))))"
    constants: "RC"
  }    
  library_tag: "c-DL.ml"
  pretty_printed: "|- (!p. |--(ff (Atom p) --> gg (Atom p))) /\ (!X Y A. |--(X --> gg A) /\ |--(ff A --> Y) ==> |--(X --> Y)) /\ (!X Y Z. |--(Y --> X \.^ Z) ==> |--(X **^ Y --> Z)) /\ (!X Y Z. |--(X **^ Y --> Z) ==> |--(Y --> X \.^ Z)) /\ (!X Y Z. |--(X --> Z /.^ Y) ==> |--(X **^ Y --> Z)) /\ (!X Y Z. |--(X **^ Y --> Z) ==> |--(X --> Z /.^ Y)) /\ (!X Y. |--(<>^X --> Y) ==> |--(X --> ||^Y)) /\ (!X Y. |--(X --> ||^Y) ==> |--(<>^X --> Y)) /\ (!X Y Z W.      |--(X **^ Y **^ <>^Z --> W) ==> |--((X **^ Y) **^ <>^Z --> W)) /\ (!X Y Z W.      |--((X **^ <>^Y) **^ Z --> W) ==> |--((X **^ Z) **^ <>^Y --> W)) /\ (!A B Y. |--(ff A **^ ff B --> Y) ==> |--(ff (A ** B) --> Y)) /\ (!A B X Y.      |--(X --> gg A) /\ |--(Y --> gg B) ==> |--(X **^ Y --> gg (A ** B))) /\ (!A B X Y.      |--(X --> gg A) /\ |--(ff B --> Y) ==> |--(ff (A \. B) --> X \.^ Y)) /\ (!A B X. |--(X --> ff A \.^ gg B) ==> |--(X --> gg (A \. B))) /\ (!A B X Y.      |--(ff B --> Y) /\ |--(X --> gg A) ==> |--(ff (B /. A) --> Y /.^ X)) /\ (!A B X. |--(X --> gg B /.^ ff A) ==> |--(X --> gg (B /. A))) /\ (!A Y. |--(<>^ff A --> Y) ==> |--(ff (<>A) --> Y)) /\ (!A X. |--(X --> gg A) ==> |--(<>^X --> gg (<>A))) /\ (!A Y. |--(ff A --> Y) ==> |--(ff (||A) --> ||^Y)) /\ (!A X. |--(X --> ||^gg A) ==> |--(X --> gg (||A)))"
}

theorems {
  conclusion:  "(a (c (fun (fun (fun (scs_v39) (bool)) (bool)) (bool)) !) (l (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (list (char)) (bool)) (bool)) !) (l (v (list (char)) p) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) Y)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z))))) (v (tri_sy) W)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z)))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (stable_sy) Z))) (v (tri_sy) W)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Z))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B)))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B)))) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B))))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B)))) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Y)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A)))) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Y)) (v (stable_sy) X)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A)))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))))))))))))))))))))))))))))) (a (c (fun (fun (scs_v39) (bool)) (bool)) !) (l (v (scs_v39) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (v (scs_v39) a))) (a (v (fun (scs_v39) (bool)) RC') (v (scs_v39) a))))))))"
  tag: DEFINITION
  fingerprint: 3862371807115589648
  definition {
    definition_type: "INDUCTIVE"
    definition_term: "(a (c (fun (fun (fun (scs_v39) (bool)) (bool)) (bool)) !) (l (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (list (char)) (bool)) (bool)) !) (l (v (list (char)) p) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) Y)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z))))) (v (tri_sy) W)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z)))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (stable_sy) Z))) (v (tri_sy) W)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Z))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B)))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B)))) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B))))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B)))) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Y)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A)))) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Y)) (v (stable_sy) X)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A)))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) !) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y)))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (c (fun (fun (loop) (bool)) (bool)) !) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) !) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (v (fun (scs_v39) (bool)) RC') (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))))))))))))))))))))))))))))) (a (c (fun (fun (scs_v39) (bool)) (bool)) !) (l (v (scs_v39) a) (a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (v (scs_v39) a))) (a (v (fun (scs_v39) (bool)) RC') (v (scs_v39) a))))))))"
    constants: "RC"
  }    
  library_tag: "c-DL.ml"
  pretty_printed: "|- !|--'. (!p. |--' (ff (Atom p) --> gg (Atom p))) /\ (!X Y A. |--' (X --> gg A) /\ |--' (ff A --> Y) ==> |--' (X --> Y)) /\        (!X Y Z. |--' (Y --> X \.^ Z) ==> |--' (X **^ Y --> Z)) /\        (!X Y Z. |--' (X **^ Y --> Z) ==> |--' (Y --> X \.^ Z)) /\        (!X Y Z. |--' (X --> Z /.^ Y) ==> |--' (X **^ Y --> Z)) /\        (!X Y Z. |--' (X **^ Y --> Z) ==> |--' (X --> Z /.^ Y)) /\        (!X Y. |--' (<>^X --> Y) ==> |--' (X --> ||^Y)) /\        (!X Y. |--' (X --> ||^Y) ==> |--' (<>^X --> Y)) /\        (!X Y Z W.             |--' (X **^ Y **^ <>^Z --> W)             ==> |--' ((X **^ Y) **^ <>^Z --> W)) /\        (!X Y Z W.             |--' ((X **^ <>^Y) **^ Z --> W)             ==> |--' ((X **^ Z) **^ <>^Y --> W)) /\        (!A B Y. |--' (ff A **^ ff B --> Y) ==> |--' (ff (A ** B) --> Y)) /\        (!A B X Y.             |--' (X --> gg A) /\ |--' (Y --> gg B)             ==> |--' (X **^ Y --> gg (A ** B))) /\        (!A B X Y.             |--' (X --> gg A) /\ |--' (ff B --> Y)             ==> |--' (ff (A \. B) --> X \.^ Y)) /\        (!A B X. |--' (X --> ff A \.^ gg B) ==> |--' (X --> gg (A \. B))) /\        (!A B X Y.             |--' (ff B --> Y) /\ |--' (X --> gg A)             ==> |--' (ff (B /. A) --> Y /.^ X)) /\        (!A B X. |--' (X --> gg B /.^ ff A) ==> |--' (X --> gg (B /. A))) /\        (!A Y. |--' (<>^ff A --> Y) ==> |--' (ff (<>A) --> Y)) /\        (!A X. |--' (X --> gg A) ==> |--' (<>^X --> gg (<>A))) /\        (!A Y. |--' (ff A --> Y) ==> |--' (ff (||A) --> ||^Y)) /\        (!A X. |--' (X --> ||^gg A) ==> |--' (X --> gg (||A)))        ==> (!a. |--a ==> |--' a)"
}

theorems {
  conclusion:  "(a (c (fun (fun (scs_v39) (bool)) (bool)) !) (l (v (scs_v39) a) (a (a (c (fun (bool) (fun (bool) (bool))) =) (a (c (fun (scs_v39) (bool)) RC) (v (scs_v39) a))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (list (char)) (bool)) (bool)) ?) (l (v (list (char)) p) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (v (tri_sy) Y)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z)))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) Y)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z))))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Z))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (stable_sy) Z))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B)))) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B)))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B)))) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Y))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A)))) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Y)) (v (stable_sy) X))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y))))))))) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))))))))))))))))))))))))))))))"
  tag: DEFINITION
  fingerprint: 2709290980882945056
  definition {
    definition_type: "INDUCTIVE"
    definition_term: "(a (c (fun (fun (scs_v39) (bool)) (bool)) !) (l (v (scs_v39) a) (a (a (c (fun (bool) (fun (bool) (bool))) =) (a (c (fun (scs_v39) (bool)) RC) (v (scs_v39) a))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (list (char)) (bool)) (bool)) ?) (l (v (list (char)) p) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (v (tri_sy) Y)))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y)))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Z) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z)))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) Y)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z))))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Z) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) W) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Z))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (stable_sy) Z))) (v (tri_sy) W))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B)))) (v (tri_sy) Y))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B)))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B)))) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Y))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y)))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A)))) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Y)) (v (stable_sy) X))))) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) B) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))))))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))) (v (tri_sy) Y))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))))))) (a (a (c (fun (bool) (fun (bool) (bool))) \\/) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (tri_sy) (bool)) (bool)) ?) (l (v (tri_sy) Y) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y))))))))) (a (c (fun (fun (loop) (bool)) (bool)) ?) (l (v (loop) A) (a (c (fun (fun (stable_sy) (bool)) (bool)) ?) (l (v (stable_sy) X) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (a (c (fun (scs_v39) (fun (scs_v39) (bool))) =) (v (scs_v39) a)) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))))))))))))))))))))))))))))))"
    constants: "RC"
  }    
  library_tag: "c-DL.ml"
  pretty_printed: "|- !a. |--a <=>     (?p. a = (ff (Atom p) --> gg (Atom p))) \/     (?X Y A. a = (X --> Y) /\ |--(X --> gg A) /\ |--(ff A --> Y)) \/     (?X Y Z. a = (X **^ Y --> Z) /\ |--(Y --> X \.^ Z)) \/     (?X Y Z. a = (Y --> X \.^ Z) /\ |--(X **^ Y --> Z)) \/     (?X Y Z. a = (X **^ Y --> Z) /\ |--(X --> Z /.^ Y)) \/     (?X Y Z. a = (X --> Z /.^ Y) /\ |--(X **^ Y --> Z)) \/     (?X Y. a = (X --> ||^Y) /\ |--(<>^X --> Y)) \/     (?X Y. a = (<>^X --> Y) /\ |--(X --> ||^Y)) \/     (?X Y Z W.          a = ((X **^ Y) **^ <>^Z --> W) /\ |--(X **^ Y **^ <>^Z --> W)) \/     (?X Y Z W.          a = ((X **^ Z) **^ <>^Y --> W) /\ |--((X **^ <>^Y) **^ Z --> W)) \/     (?A B Y. a = (ff (A ** B) --> Y) /\ |--(ff A **^ ff B --> Y)) \/     (?A B X Y.          a = (X **^ Y --> gg (A ** B)) /\          |--(X --> gg A) /\          |--(Y --> gg B)) \/     (?A B X Y.          a = (ff (A \. B) --> X \.^ Y) /\          |--(X --> gg A) /\          |--(ff B --> Y)) \/     (?A B X. a = (X --> gg (A \. B)) /\ |--(X --> ff A \.^ gg B)) \/     (?A B X Y.          a = (ff (B /. A) --> Y /.^ X) /\          |--(ff B --> Y) /\          |--(X --> gg A)) \/     (?A B X. a = (X --> gg (B /. A)) /\ |--(X --> gg B /.^ ff A)) \/     (?A Y. a = (ff (<>A) --> Y) /\ |--(<>^ff A --> Y)) \/     (?A X. a = (<>^X --> gg (<>A)) /\ |--(X --> gg A)) \/     (?A Y. a = (ff (||A) --> ||^Y) /\ |--(ff A --> Y)) \/     (?A X. a = (X --> gg (||A)) /\ |--(X --> ||^gg A))"
}















theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) p)))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 4208037883098591283
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (Atom p) --> gg (Atom p))"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 4208037883098591283
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (v (tri_sy) Y))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 648188192380520622
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X --> gg A) /\ |--(ff A --> Y) ==> |--(X --> Y)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 648188192380520622
}

theorems {
  conclusion:   "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 2331699710152630998
  library_tag: "c-DL.ml"
  pretty_printed: "|--(Y --> X \.^ Z) ==> |--(X **^ Y --> Z)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2331699710152630998
}

theorems {
  conclusion:   "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Z)))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 2313659865416298332
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X **^ Y --> Z) ==> |--(Y --> X \.^ Z)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2313659865416298332
}

theorems {
  conclusion:   "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 324105359611762671
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X --> Z /.^ Y) ==> |--(X **^ Y --> Z)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 324105359611762671
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (v (tri_sy) Z)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Z)) (v (stable_sy) Y)))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 2346343096004033294
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X **^ Y --> Z) ==> |--(X --> Z /.^ Y)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2346343096004033294
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 3961558954004646117
  library_tag: "c-DL.ml"
  pretty_printed: "|--(<>^X --> Y) ==> |--(X --> ||^Y)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 3961558954004646117
}

theorems {
  conclusion:  "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (v (tri_sy) Y))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 321626462112899060
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X --> ||^Y) ==> |--(<>^X --> Y)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 321626462112899060
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) Y)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z))))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Z)))) (v (tri_sy) W))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 2435389848046465754
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X **^ (Y **^ <>^Z) --> W) ==> |--((X **^ Y) **^ <>^Z --> W)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2435389848046465754
}

theorems {
  conclusion:   "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (stable_sy) Z))) (v (tri_sy) W)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Z))) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) Y)))) (v (tri_sy) W))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 603487514377218900
  library_tag: "c-DL.ml"
  pretty_printed: "|--((X **^ <>^Y) **^ Z --> W) ==> |--((X **^ Z) **^ <>^Y --> W)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 603487514377218900
}

theorems {
  conclusion:   "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B)))) (v (tri_sy) Y))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 2898052989604839426
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff A **^ ff B --> Y) ==> |--(ff (A ** B) --> Y)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2898052989604839426
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) Y)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (a (c (fun (stable_sy) (fun (stable_sy) (stable_sy))) *:) (v (stable_sy) X)) (v (stable_sy) Y))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (v (loop) A)) (v (loop) B))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 1036463095527292498
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X --> gg A) /\ |--(Y --> gg B) ==> |--(X **^ Y --> gg (A ** B))"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1036463095527292498
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B)))) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (v (stable_sy) X)) (v (tri_sy) Y)))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 2716539267995925388
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X --> gg A) /\ |--(ff B --> Y) ==> |--(ff (A \. B) --> X \.^ Y)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2716539267995925388
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (stable_sy) (fun (tri_sy) (tri_sy))) **|) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (v (loop) A)) (v (loop) B))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 1236764197481027867
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X --> ff A \.^ gg B) ==> |--(X --> gg (A \. B))"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1236764197481027867
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (a (c (fun (bool) (fun (bool) (bool))) /\\) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) B))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A)))) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (v (tri_sy) Y)) (v (stable_sy) X)))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 4245526831407530504
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff B --> Y) /\ |--(X --> gg A) ==> |--(ff (B /. A) --> Y /.^ X)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 4245526831407530504
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (a (c (fun (tri_sy) (fun (stable_sy) (tri_sy))) **:) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) B))) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (v (loop) B)) (v (loop) A))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 1679452577520289523
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X --> gg B /.^ ff A) ==> |--(X --> gg (B /. A))"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1679452577520289523
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A)))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A)))) (v (tri_sy) Y))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 4419412080852652112
  library_tag: "c-DL.ml"
  pretty_printed: "|--(<>^ff A --> Y) ==> |--(ff (<>A) --> Y)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 4419412080852652112
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (stable_sy) (stable_sy)) twopow) (v (stable_sy) X))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (v (loop) A))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 1786196417891196161
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X --> gg A) ==> |--(<>^X --> gg (<>A))"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1786196417891196161
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (v (loop) A))) (v (tri_sy) Y)))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) halfatn) (v (loop) A)))) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (v (tri_sy) Y)))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 1333809621678183494
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff A --> Y) ==> |--(ff (||A) --> ||^Y)"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1333809621678183494
}

theorems {
  conclusion: "(a (a (c (fun (bool) (fun (bool) (bool))) ==>) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (tri_sy) (tri_sy)) halfatn4) (a (c (fun (loop) (tri_sy)) TAGB) (v (loop) A)))))) (a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (v (stable_sy) X)) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) halfatn) (v (loop) A))))))"
  tag: THEOREM
  training_split: TRAINING
  fingerprint: 1516388614069459250
  library_tag: "c-DL.ml"
  pretty_printed: "|--(X --> ||^gg A) ==> |--(X --> gg (||A))"
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1516388614069459250
}






















































theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) N)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) N))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 2638008682462918684
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ( ((Atom A) /. (Atom N)) ** (Atom N)) --> gg (Atom A))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2638008682462918684
}

theorems {
  conclusion:  "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) N))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) N))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 2783218001153660763
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((Atom N) ** ((Atom N) \. (Atom A))) --> gg (Atom A))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2783218001153660763
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y)))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X)))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 558101816666507998
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (Atom Y) --> gg ( (Atom X) /. ((Atom Y) \. (Atom X))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 558101816666507998
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y)))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 1236623560858316722
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (Atom Y) --> gg (((Atom X) /. (Atom Y)) \. (Atom X)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1236623560858316722
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 460115165279019657
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ( ( (Atom A) /. ((Atom B) \. (Atom A))) \. (Atom A)) --> gg ((Atom B) \. (Atom A)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 460115165279019657
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 4397087163139479502
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((Atom B) \. (Atom A))--> gg ( ( (Atom A) /. ((Atom B) \. (Atom A))) \. (Atom A)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 4397087163139479502
}

theorems {
  conclusion:  "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 4513506378801904449
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((((Atom A) /. (Atom B)) ** (Atom B)) ** ((Atom A) \. (Atom C))) --> gg (Atom C))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 4513506378801904449
}

theorems {
  conclusion:  "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B))))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 1876798653094833217
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((Atom A) ** ((((Atom A) \. (Atom B)) /. ((Atom A) \. (Atom B))) ** ((Atom A) \. (Atom B))))--> gg (Atom B))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1876798653094833217
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 2596202413827850746
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((Atom A) ** ((((Atom A) \. (Atom B)) /. (Atom A)) ** (((Atom A) /. (Atom C)) ** (Atom C)))) --> gg (Atom B))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2596202413827850746
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 958915126580920342
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((Atom C) /. (((Atom C) /. (Atom A)) \. (Atom C))) \. (Atom C)) --> gg (((Atom C) /. (Atom A)) \. (Atom C)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 958915126580920342
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 2765589177640546374
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((Atom C) /. (Atom A)) \. (Atom C)) --> gg (((Atom C) /. (((Atom C) /. (Atom A)) \. (Atom C))) \. (Atom C)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2765589177640546374
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 114238463023881230
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((Atom A) ** (Atom B)) ** (Atom A)) --> gg ((( ((Atom A) ** (Atom B)) ** (Atom C)) /. (Atom C)) ** (Atom A)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 114238463023881230
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 4318149125608959292
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((Atom A) ** (Atom B)) \. (((Atom A) ** (Atom B)) ** (Atom C)))--> gg (Atom C))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 4318149125608959292
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 2876977343986042984
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((((Atom A) ** (Atom B))) \. (((Atom A) ** (Atom B)) ** (Atom C))) /. (Atom C)) --> gg ((Atom C) /. (((Atom C) /. (Atom B)) ** (Atom B))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2876977343986042984
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 1587678095110685970
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((((Atom A) ** (Atom B)) \. (((Atom A) ** (Atom B)) ** (Atom C))) /. ((Atom A) /. ((Atom C)\. (Atom A))))) --> gg ((Atom C) /. (Atom C)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1587678095110685970
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D)))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 4341847660995882019
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((((Atom A) ** (Atom B)) \. (((Atom A) ** (Atom B)) ** (Atom C))) /. (((Atom A) /. (((Atom C) \. (Atom D))\. (Atom A))))) --> gg ((Atom C) /. (((Atom D) /. ((Atom C) \. (Atom D))) \. (Atom D))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 4341847660995882019
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 4529808024952902878
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((Atom D) /. ((Atom C) \. (Atom D))) \. (Atom D)) --> gg ((Atom A) /. (((Atom C) \. (Atom D)) \. (Atom A))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 4529808024952902878
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 4368871052161443571
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((Atom A) ** ((Atom A) /. (Atom B)))--> gg ((((Atom C) /. (Atom A)) \. (Atom C)) ** ((Atom A) /. (Atom B))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 4368871052161443571
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) D))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 3195355810323089562
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((Atom D) /. (Atom C)) --> gg ((Atom D) /. ((( ((Atom A) /. (Atom B))) ** (Atom B)) ** ((((Atom A) /. (Atom B)) ** (Atom B)) \. (Atom C)))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 3195355810323089562
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 2938725718991790668
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((((Atom A) /. (Atom B)) ** (Atom B)) ** ((((Atom A) /. (Atom B)) ** (Atom B)) \. (Atom C)))) --> gg ((Atom C)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2938725718991790668
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 3854662984982734629
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((((Atom A) /. (Atom B)) ** (Atom B)) ** ((Atom A) \. (<> (Atom C)))) --> gg (<> (Atom C)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 3854662984982734629
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (loop) (loop)) ssqrt) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A)))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C)))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 3463883074620627735
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((Atom C) /. (<> (Atom A))) \. (Atom C)) --> gg (((Atom C) /. (<> (((Atom C) /. (Atom A)) \. (Atom C)))) \. (Atom C)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 3463883074620627735
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y)))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z)))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 1756320527672514490
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((Atom X) ** ((Atom Y) /. (<> (Atom Z)))) --> gg (((Atom X) ** (Atom Y)) /. (<> (Atom Z))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1756320527672514490
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) ssqrt) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z)))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y)))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z))))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 1088050020559905487
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (<> ((Atom X) ** ((Atom Y) /. (<> (Atom Z))))) --> gg (<>(((Atom X) ** (Atom Y)) /. (<> (Atom Z)))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 1088050020559905487
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y)))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y))))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z)))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 3834578844888465306
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((Atom X) ** ((<> (Atom Y)) /. (<> (Atom Z)))) --> gg (((Atom X) ** (<> (Atom Y))) /. (<> (Atom Z))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 3834578844888465306
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y))))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 2228622381971464088
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff ((Atom X) /. ( (Atom Z) ** (<> (Atom Y)))) --> gg (((Atom X) /. (<> (Atom Y))) /. (Atom Z)))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 2228622381971464088
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y)))) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Y))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (a (c (fun (loop) (fun (loop) (loop))) **.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) Z))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) X)))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 3783468845715848072
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (((Atom Z) /. (Atom Y)) ** ((Atom Y)/. (<> (Atom X)))) --> gg ((Atom Z) /.(<> (Atom X))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 3783468845715848072
}

theorems {
  conclusion: "(a (c (fun (scs_v39) (bool)) RC) (a (a (c (fun (stable_sy) (fun (tri_sy) (scs_v39))) <=.) (a (c (fun (loop) (stable_sy)) mark_term) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (loop) (loop)) ssqrt) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))))))) (a (c (fun (loop) (tri_sy)) TAGB) (a (c (fun (loop) (loop)) ssqrt) (a (a (c (fun (loop) (fun (loop) (loop))) *|) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) C))) (a (c (fun (loop) (loop)) ssqrt) (a (c (fun (loop) (loop)) ssqrt) (a (a (c (fun (loop) (fun (loop) (loop))) *.) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) A))) (a (c (fun (list (char)) (loop)) drop0) (v (list (char)) B)))))))))))"
  tag: THEOREM
  training_split: VALIDATION
  fingerprint: 632432641706674006
  library_tag: "c-DL.ml"
  pretty_printed: "|--(ff (<> (<> (<> ((Atom A) ** (Atom B))))) --> gg (<> ((Atom C) \. ((Atom C) ** (<> (<> ((Atom A) ** (Atom B))))))))" 
  proof_function: "TAC_PROOF"
  goal_fingerprint: 632432641706674006
}